// Generated by view binder compiler. Do not edit!
package com.example.diyhomeautomation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.diyhomeautomation.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView loginDescTv;

  @NonNull
  public final TextInputLayout loginEmailTil;

  @NonNull
  public final Button loginLoginBtn;

  @NonNull
  public final ImageView loginLogoIv;

  @NonNull
  public final TextInputLayout loginPasswordTil;

  @NonNull
  public final Button loginRegisterBtn;

  @NonNull
  public final TextView loginWelcomeTv;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull TextView loginDescTv,
      @NonNull TextInputLayout loginEmailTil, @NonNull Button loginLoginBtn,
      @NonNull ImageView loginLogoIv, @NonNull TextInputLayout loginPasswordTil,
      @NonNull Button loginRegisterBtn, @NonNull TextView loginWelcomeTv) {
    this.rootView = rootView;
    this.loginDescTv = loginDescTv;
    this.loginEmailTil = loginEmailTil;
    this.loginLoginBtn = loginLoginBtn;
    this.loginLogoIv = loginLogoIv;
    this.loginPasswordTil = loginPasswordTil;
    this.loginRegisterBtn = loginRegisterBtn;
    this.loginWelcomeTv = loginWelcomeTv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login_desc_tv;
      TextView loginDescTv = ViewBindings.findChildViewById(rootView, id);
      if (loginDescTv == null) {
        break missingId;
      }

      id = R.id.login_email_til;
      TextInputLayout loginEmailTil = ViewBindings.findChildViewById(rootView, id);
      if (loginEmailTil == null) {
        break missingId;
      }

      id = R.id.login_login_btn;
      Button loginLoginBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginLoginBtn == null) {
        break missingId;
      }

      id = R.id.login_logo_iv;
      ImageView loginLogoIv = ViewBindings.findChildViewById(rootView, id);
      if (loginLogoIv == null) {
        break missingId;
      }

      id = R.id.login_password_til;
      TextInputLayout loginPasswordTil = ViewBindings.findChildViewById(rootView, id);
      if (loginPasswordTil == null) {
        break missingId;
      }

      id = R.id.login_register_btn;
      Button loginRegisterBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginRegisterBtn == null) {
        break missingId;
      }

      id = R.id.login_welcome_tv;
      TextView loginWelcomeTv = ViewBindings.findChildViewById(rootView, id);
      if (loginWelcomeTv == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, loginDescTv, loginEmailTil,
          loginLoginBtn, loginLogoIv, loginPasswordTil, loginRegisterBtn, loginWelcomeTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
