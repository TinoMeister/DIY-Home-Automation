// Generated by view binder compiler. Do not edit!
package com.example.diyhomeautomation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.diyhomeautomation.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityScheduleDeviceAddBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Switch cardHomeDevActiveSw;

  @NonNull
  public final TextView cardHomeDevTitleTv;

  @NonNull
  public final TextInputLayout scheduleDeviceAddDdlstDevice;

  @NonNull
  public final TextInputLayout scheduleDeviceAddDdlstRoom;

  @NonNull
  public final TextView scheduleDeviceAddDevicetv;

  @NonNull
  public final TextView scheduleDeviceAddRoomtv;

  @NonNull
  public final TextView scheduleDeviceAddValuetv;

  private ActivityScheduleDeviceAddBinding(@NonNull ConstraintLayout rootView,
      @NonNull Switch cardHomeDevActiveSw, @NonNull TextView cardHomeDevTitleTv,
      @NonNull TextInputLayout scheduleDeviceAddDdlstDevice,
      @NonNull TextInputLayout scheduleDeviceAddDdlstRoom,
      @NonNull TextView scheduleDeviceAddDevicetv, @NonNull TextView scheduleDeviceAddRoomtv,
      @NonNull TextView scheduleDeviceAddValuetv) {
    this.rootView = rootView;
    this.cardHomeDevActiveSw = cardHomeDevActiveSw;
    this.cardHomeDevTitleTv = cardHomeDevTitleTv;
    this.scheduleDeviceAddDdlstDevice = scheduleDeviceAddDdlstDevice;
    this.scheduleDeviceAddDdlstRoom = scheduleDeviceAddDdlstRoom;
    this.scheduleDeviceAddDevicetv = scheduleDeviceAddDevicetv;
    this.scheduleDeviceAddRoomtv = scheduleDeviceAddRoomtv;
    this.scheduleDeviceAddValuetv = scheduleDeviceAddValuetv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityScheduleDeviceAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityScheduleDeviceAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_schedule_device_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityScheduleDeviceAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardHomeDev_active_sw;
      Switch cardHomeDevActiveSw = ViewBindings.findChildViewById(rootView, id);
      if (cardHomeDevActiveSw == null) {
        break missingId;
      }

      id = R.id.cardHomeDev_title_tv;
      TextView cardHomeDevTitleTv = ViewBindings.findChildViewById(rootView, id);
      if (cardHomeDevTitleTv == null) {
        break missingId;
      }

      id = R.id.schedule_device_add_ddlst_device;
      TextInputLayout scheduleDeviceAddDdlstDevice = ViewBindings.findChildViewById(rootView, id);
      if (scheduleDeviceAddDdlstDevice == null) {
        break missingId;
      }

      id = R.id.schedule_device_add_ddlst_room;
      TextInputLayout scheduleDeviceAddDdlstRoom = ViewBindings.findChildViewById(rootView, id);
      if (scheduleDeviceAddDdlstRoom == null) {
        break missingId;
      }

      id = R.id.schedule_device_add_Devicetv;
      TextView scheduleDeviceAddDevicetv = ViewBindings.findChildViewById(rootView, id);
      if (scheduleDeviceAddDevicetv == null) {
        break missingId;
      }

      id = R.id.schedule_device_add_roomtv;
      TextView scheduleDeviceAddRoomtv = ViewBindings.findChildViewById(rootView, id);
      if (scheduleDeviceAddRoomtv == null) {
        break missingId;
      }

      id = R.id.schedule_device_add_valuetv;
      TextView scheduleDeviceAddValuetv = ViewBindings.findChildViewById(rootView, id);
      if (scheduleDeviceAddValuetv == null) {
        break missingId;
      }

      return new ActivityScheduleDeviceAddBinding((ConstraintLayout) rootView, cardHomeDevActiveSw,
          cardHomeDevTitleTv, scheduleDeviceAddDdlstDevice, scheduleDeviceAddDdlstRoom,
          scheduleDeviceAddDevicetv, scheduleDeviceAddRoomtv, scheduleDeviceAddValuetv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
