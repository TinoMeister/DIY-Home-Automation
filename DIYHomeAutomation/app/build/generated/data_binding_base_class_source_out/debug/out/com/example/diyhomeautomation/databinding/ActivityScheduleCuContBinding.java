// Generated by view binder compiler. Do not edit!
package com.example.diyhomeautomation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.diyhomeautomation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityScheduleCuContBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button scheduleCuAddBtn;

  @NonNull
  public final ListView scheduleCuDevLst;

  @NonNull
  public final TextView scheduleCuDevTv;

  @NonNull
  public final LinearLayout scheduleCuLy;

  @NonNull
  public final LinearLayout scheduleCuLy2;

  private ActivityScheduleCuContBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button scheduleCuAddBtn, @NonNull ListView scheduleCuDevLst,
      @NonNull TextView scheduleCuDevTv, @NonNull LinearLayout scheduleCuLy,
      @NonNull LinearLayout scheduleCuLy2) {
    this.rootView = rootView;
    this.scheduleCuAddBtn = scheduleCuAddBtn;
    this.scheduleCuDevLst = scheduleCuDevLst;
    this.scheduleCuDevTv = scheduleCuDevTv;
    this.scheduleCuLy = scheduleCuLy;
    this.scheduleCuLy2 = scheduleCuLy2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityScheduleCuContBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityScheduleCuContBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_schedule_cu_cont, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityScheduleCuContBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.schedule_cu_add_btn;
      Button scheduleCuAddBtn = ViewBindings.findChildViewById(rootView, id);
      if (scheduleCuAddBtn == null) {
        break missingId;
      }

      id = R.id.schedule_cu_dev_lst;
      ListView scheduleCuDevLst = ViewBindings.findChildViewById(rootView, id);
      if (scheduleCuDevLst == null) {
        break missingId;
      }

      id = R.id.schedule_cu_dev_tv;
      TextView scheduleCuDevTv = ViewBindings.findChildViewById(rootView, id);
      if (scheduleCuDevTv == null) {
        break missingId;
      }

      id = R.id.schedule_cu_ly;
      LinearLayout scheduleCuLy = ViewBindings.findChildViewById(rootView, id);
      if (scheduleCuLy == null) {
        break missingId;
      }

      id = R.id.schedule_cu_ly2;
      LinearLayout scheduleCuLy2 = ViewBindings.findChildViewById(rootView, id);
      if (scheduleCuLy2 == null) {
        break missingId;
      }

      return new ActivityScheduleCuContBinding((ConstraintLayout) rootView, scheduleCuAddBtn,
          scheduleCuDevLst, scheduleCuDevTv, scheduleCuLy, scheduleCuLy2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
