// Generated by view binder compiler. Do not edit!
package com.example.diyhomeautomation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.diyhomeautomation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout LogOutLL;

  @NonNull
  public final LinearLayout NotificationLL;

  @NonNull
  public final ImageView SettingsCircle;

  @NonNull
  public final ImageView btnLogOut;

  @NonNull
  public final TextView mainMainTextTv;

  @NonNull
  public final ImageView settingBtn;

  @NonNull
  public final LinearLayout settingsLn;

  private FragmentSettingBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout LogOutLL,
      @NonNull LinearLayout NotificationLL, @NonNull ImageView SettingsCircle,
      @NonNull ImageView btnLogOut, @NonNull TextView mainMainTextTv, @NonNull ImageView settingBtn,
      @NonNull LinearLayout settingsLn) {
    this.rootView = rootView;
    this.LogOutLL = LogOutLL;
    this.NotificationLL = NotificationLL;
    this.SettingsCircle = SettingsCircle;
    this.btnLogOut = btnLogOut;
    this.mainMainTextTv = mainMainTextTv;
    this.settingBtn = settingBtn;
    this.settingsLn = settingsLn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LogOut_LL;
      LinearLayout LogOutLL = ViewBindings.findChildViewById(rootView, id);
      if (LogOutLL == null) {
        break missingId;
      }

      id = R.id.Notification_LL;
      LinearLayout NotificationLL = ViewBindings.findChildViewById(rootView, id);
      if (NotificationLL == null) {
        break missingId;
      }

      id = R.id.Settings_circle;
      ImageView SettingsCircle = ViewBindings.findChildViewById(rootView, id);
      if (SettingsCircle == null) {
        break missingId;
      }

      id = R.id.btn_log_out;
      ImageView btnLogOut = ViewBindings.findChildViewById(rootView, id);
      if (btnLogOut == null) {
        break missingId;
      }

      id = R.id.main_mainText_tv;
      TextView mainMainTextTv = ViewBindings.findChildViewById(rootView, id);
      if (mainMainTextTv == null) {
        break missingId;
      }

      id = R.id.setting_btn;
      ImageView settingBtn = ViewBindings.findChildViewById(rootView, id);
      if (settingBtn == null) {
        break missingId;
      }

      id = R.id.settings_ln;
      LinearLayout settingsLn = ViewBindings.findChildViewById(rootView, id);
      if (settingsLn == null) {
        break missingId;
      }

      return new FragmentSettingBinding((ConstraintLayout) rootView, LogOutLL, NotificationLL,
          SettingsCircle, btnLogOut, mainMainTextTv, settingBtn, settingsLn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
