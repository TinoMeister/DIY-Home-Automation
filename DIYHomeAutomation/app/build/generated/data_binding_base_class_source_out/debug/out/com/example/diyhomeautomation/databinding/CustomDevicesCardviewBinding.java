// Generated by view binder compiler. Do not edit!
package com.example.diyhomeautomation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.diyhomeautomation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomDevicesCardviewBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button cardDevDeleteBtn;

  @NonNull
  public final Button cardDevEditBtn;

  @NonNull
  public final ImageView cardDevImg;

  @NonNull
  public final TextView cardDevTitleTv;

  private CustomDevicesCardviewBinding(@NonNull CardView rootView, @NonNull Button cardDevDeleteBtn,
      @NonNull Button cardDevEditBtn, @NonNull ImageView cardDevImg,
      @NonNull TextView cardDevTitleTv) {
    this.rootView = rootView;
    this.cardDevDeleteBtn = cardDevDeleteBtn;
    this.cardDevEditBtn = cardDevEditBtn;
    this.cardDevImg = cardDevImg;
    this.cardDevTitleTv = cardDevTitleTv;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomDevicesCardviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomDevicesCardviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_devices_cardview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomDevicesCardviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardDev_delete_btn;
      Button cardDevDeleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (cardDevDeleteBtn == null) {
        break missingId;
      }

      id = R.id.cardDev_edit_btn;
      Button cardDevEditBtn = ViewBindings.findChildViewById(rootView, id);
      if (cardDevEditBtn == null) {
        break missingId;
      }

      id = R.id.cardDev_img;
      ImageView cardDevImg = ViewBindings.findChildViewById(rootView, id);
      if (cardDevImg == null) {
        break missingId;
      }

      id = R.id.cardDev_title_tv;
      TextView cardDevTitleTv = ViewBindings.findChildViewById(rootView, id);
      if (cardDevTitleTv == null) {
        break missingId;
      }

      return new CustomDevicesCardviewBinding((CardView) rootView, cardDevDeleteBtn, cardDevEditBtn,
          cardDevImg, cardDevTitleTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
